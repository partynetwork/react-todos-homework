const path = require('path');
const fs = require('fs');
const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');

module.exports = require('./webpack.config.base')({
    devtool: 'source-map',
    entry: [
        //app: [
            'react-hot-loader/patch',
            'webpack-hot-middleware/client',
            'webpack/hot/dev-server',
            path.join(process.cwd(), 'src/app.js')
        //]
    ],
    output: {
        filename: '[name].js',
        chunkFilename: '[name].chunk.js'
    },
    externals: {
        AppConfig: JSON.stringify(require(path.join(process.cwd(), 'configs/development.json')))
    },
    babelQuery: {
        presets: [
            "react",
            "react-hmre"
        ],
        plugins: ['react-hot-loader/babel'],
    },
    plugins: dependencyHandlers().concat([
        // hot reload
        new HtmlWebpackPlugin({
            inject: true, // Inject all files that are generated by webpack, e.g. bundle.js
            templateContent: templateContent(), // eslint-disable-line no-use-before-define
        }),
        new webpack.HotModuleReplacementPlugin()
    ])
});


function templateContent() {
    return fs.readFileSync(
        path.resolve(process.cwd(), 'index.html')
    ).toString();

}
function dependencyHandlers() {
    return [
        new webpack.optimize.CommonsChunkPlugin({
            name: 'vendor',
            children: true,
            minChunks: 2,
            async: true,
        }),
    ];
}